Level 0 Report
Team: The Matrix
Members: Hanxiong Chen, Lin Liu, Nan Min, Xiakun Lu

Description: The tool we use is GnuPG. The OS environment is Linux. We test this on server installed Fedora and Linux-lab.

Steps:
-1 Installation
For linux system, the GnuPG can be achieved from system resource or use yum to install.

-2 Generate Keypair
Use command "gpg --gen-key" to generate the keypair. After running this program, you will be asked some questions. 
--1 Please select what kind of key you want:
(1) RSA and RSA (default)
(2) DSA and Elgamal
(3) DSA (sign only)
(4) RSA (sign only)
Your selection?
Select default RSA. Input 1 and press enter.
--2 RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048)
Choose key length is 2048
--3 Enter the validation of the keypair. The default unit is day. If you do not enter anything, the keypair will be always valid.
--4 Some other personal information, including userID, email address and comment.
comment: This process is a little slow. This is because the program use linux /dev/random device to generate the random key. That device need to collect enough system noise, so just wait or keep typing to speed up the generation.

-3 List key
After the generation process, use command "gpg --list-keys" to check the generated key. 

-4 Export the public key into a public key file.
Use command "gpg -a --output key.public --export UID"
comment:
(1) -a stands for output format is text. The output is binary file by default
(2) --output follows by the output public key file name 
(3) --export follows by your public key identifier

-5 Import other's public key
Use command "gpg --import key.public"
comment: substitute the key.public to a specific public key file.

-6 Encrypt a file with receiver's public key
Use command "gpg -a --output message-cipher.txt -r UID -e message.txt"
comment: 
(1) -r stands for the user's public key uid. It can be a userID or a email address. 
(2) -e stands for the encrypting operation. 
(3) The  message-cipher.txt file contains the ciphertext. 

-7 Decrypt a file with own private key
Use command "gpg --output message-plain.txt -d message-cipher.txt".
comment: 
(1) --output specify the output file of plaintext 
(2) -d stands for the decrypting operation
(3) message-cipher.txt should be replaced by the cipher text given by sender

Addition: Digital Signature
We use "gpg -a -b message.txt" to sign a file. -a stands for output format is text; -b stands for generating another single signature file rather than combine the signature with the ciphertext. 

-----Created by "The Matrix" team-----


